/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
@import "reset.css";

:root {
  --slate-50: rgb(248 250 252);
  --slate-100: rgb(241 245 249);
  --slate-200: rgb(226 232 240);
  --slate-300: rgb(203 213 225);
  --slate-400: rgb(148 163 184);
  --slate-500: rgb(100 116 139);
  --slate-600: rgb(71 85 105);
  --slate-700: rgb(51 65 85);
  --slate-800: rgb(30 41 59);
  --slate-900: rgb(15 23 42);
  --slate-950: rgb(2 6 23);

  --teal-300: rgb(94 234 212);
  --teal-400: rgb(45 212 191);

  --color-base: white;
  --color-base-50: var(--slate-50);
  --color-base-100: var(--slate-100);
  --color-base-200: var(--slate-200);

  --color-text: var(--slate-900);

  --rounded-full: 9999px;
  --rounded-sm: 0.25rem;
  --rounded-md: 0.5rem;
}

body {
  background-color: var(--color-base);
  color: var(--color-text);
}

input[type="checkbox"],
input[type="radio"] {
  width: 1.25rem;
  height: 1.25rem;

  &:checked {
    accent-color: var(--teal-300);
  }
}

.container {
  height: 100%;
  max-width: 1080px;
  display: flex;
  margin: 0 auto;
  padding: 1.25rem;
}

.filter-list-container {
  width: 250px;
}

.filter-list {
  max-height: 15rem;
  overflow-y: auto;
  padding: 0 0.625rem;
}

.filter-list-summary {
  padding: 1.5rem 0;
}

.filter-list-item {
  display: block;
  padding: 0.625rem 0;
}

.search-container {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  max-width: 630px;
  margin: 0 auto;
}

.search {
  position: relative;
  display: flex;

  & > input {
    border-radius: var(--rounded-full);
  }

  > button {
    position: absolute;
    top: 0;
    right: 0;
    transform: translate3d(-0.3rem, 0.3rem, 0);
    border-radius: var(--rounded-full);
  }
}

.search-results {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.search-result-list {
  display: grid;
  gap: 2rem 1.25rem;

  @media (min-width: 768px) and (max-width: 1023px) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: 1024px) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.product-card {
  background-color: var(--color-base-100);
  border-radius: var(--rounded-md);
  overflow: hidden;
}

.product-card-header {
  height: 92px;
  background-color: var(--color-base-200);
}

.product-card-body {
  padding: 0.375rem;
}

.product-price {
  display: flex;
}

.product-price-badge {
}

/* UI Components */
.input {
  padding: 0.875rem 1.25rem;
}

.input-full {
  width: 100%;
}

.icon {
  width: 12px;
  height: 12px;
}

.btn {
  padding: 0.875rem 2rem;
  background-color: var(--slate-200);
  border: 1px solid var(--slate-200);
  border-radius: var(--rounded-sm);

  &:hover {
    background-color: var(--slate-300);
  }

  &:active {
    background-color: var(--slate-400);
  }
}

.btn-square {
  padding: 0.625rem 0.875rem;
}

.btn-full {
  width: 100%;
}

.badge {
  text-align: center;
  padding: 0.375rem;
  border-width: 2px;
  border-style: solid;
  border-color: var(--slate-300);
  border-radius: var(--rounded-sm);
  background-color: var(--slate-200);
  color: var(--slate-600);
}

.badge-full {
  display: block;
  width: 100%;
}

.badge-warning {
  border: none;
  background-color: var(--slate-400);
  color: var(---900);
}
